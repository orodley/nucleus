;; TODO: make this take varags and a format string
(extern (rt_panic panic!) (?) -> ?)
(extern (rt_type type) (?) -> ?)

(defun not ((b bool)) -> bool
  (if b false true))

(defun atom? (sexpr)
  (not (cons? sexpr)))

(defun symbol? (thing)
  (eq? (type thing) symbol-t))

(defun assert! (condition message)
  (unless condition
    (panic! message)))

(extern (rt_rand random) () -> ?)

(defvar $gensym-counter 0)

(defun gensym ()
  (symbol<-string
    (format nil "GENSYM-~" (set $gensym-counter (+ 1 $gensym-counter)))))

;; Prints the actual value that is used to represent a dynamic value in memory
;; Used for debugging the compiler, shouldn't be used for anything else
(extern (rt_raw_print %raw-print) (?) -> void)
