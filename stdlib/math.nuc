(extern (log10f log10) (float) -> float)
(extern (log2f log2) (float) -> float)
(extern (floorf floor) (float) -> float)
(extern (ceilf ceiling) (float) -> float)
(extern (sinf sin) (float) -> float)

;;; TODO: varargs
(defun + (a b) (+ a b))
(defun - (a b) (- a b))
(defun * (a b) (* a b))

(defun int? (x)
  (eq? (type x) fixnum-t))

(defun zero? (x)
  (eq? x 0))

(defun even? (x)
  (eq? (% x 2) 0))

(defun odd? (x)
  (eq? (% x 2) 1))

(defun expt (base power)
  (assert! (>= power 0) "Power must be non-negative")
  (%expt base power 1))

(defun %expt (base power acc)
  (cond
    ((zero? power) acc)
    ((even? power) (%expt (* base base) (/ power 2) acc))
    (true (%expt base (- power 1) (* acc base)))))

;;; TODO: varargs
(defun max (a b) (if (> a b) a b))
